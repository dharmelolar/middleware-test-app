import { ResourceAttributes } from "@opentelemetry/resources";
export interface Config {
    pauseMetrics: Boolean | number;
    pauseTraces: Boolean | number;
    DEBUG: Boolean | number;
    host: string;
    projectName: string;
    serviceName: string;
    port: {
        grpc: number;
        fluent: number;
    };
    target: string;
    profilingServerUrl: string;
    enableProfiling: boolean;
    accessToken: string;
    tenantID: string;
    mwAuthURL: string;
    consoleLog: boolean;
    consoleError: boolean;
    meterProvider: any;
    isServerless: boolean;
    customResourceAttributes: ResourceAttributes;
    disabledInstrumentations: string;
    consoleExporter: boolean;
    enableSelfInstrumentation: boolean;
    sdkVersion?: string;
    excludeHttpTraces?: {
        incoming?: {
            urls?: string[];
            methods?: string[];
        };
        outgoing?: {
            urls?: string[];
            methods?: string[];
        };
    };
}
export declare let configDefault: Config;
export declare const init: (config?: Partial<Config>) => Config;
export declare function computeOptions(config?: Partial<Config>): Partial<Config>;
